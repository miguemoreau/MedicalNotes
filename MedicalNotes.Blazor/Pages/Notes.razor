@page "/Notes"
@using System.Collections.Generic
@using System.Net.Http
@using System.Net.Http.Json
@using MedicalNotes.Blazor.Data
@using Newtonsoft.Json
@inject HttpClient Http



<nav class="navbar navbar-expand-lg bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand text-light">Notes</a>
          

        <div class="row" >
    <div class="col-12 text-right">
        <a class="btn btn-outline-light" href="NoteForm"> New Note </a>
    </div>
</div>

    </div>
</nav>




<table class="table table-dark table-hover">

    <tr>
        <th>Id</th>
        <th>Date</th>
        <th>Reminder</th>
        <th>Doctor Name</th>
        <th>Doctor Info</th>
        <th>Diagnosis</th>
        <th>Recipe</th>
    </tr>


    @if (response != null && response.Data != null)

    {
        var model = JsonConvert.DeserializeObject<List<Request>>(response.Data.ToString());

        @foreach (Request element in model)
        {
            <tr>
                <td>@(element.Id.ToString())</td>
                <td>@(element.Date.ToString())</td>
                <td>@(element.Reminder.ToString())</td>
                <td>@(element.DoctorName?.ToString())</td>
                <td>@(element.DoctorInfo?.ToString())</td>
                <td>@(element.Diagnosis?.ToString())</td>
                <td>@(element.Recipe?.ToString())</td>
                <td>
                    <a class="btn btn-outline-light" href="/NoteForm/@(element.Id.ToString())">Edit</a> 
                    <a class="btn btn-outline-light" href="/NoteDeleteForm/@(element.Id.ToString())">Delete</a>
                </td>
            </tr>
        }
    }
</table>

 <footer class=" footer fixed-bottom footer bg-dark text-center ">
    <div class="container"></div>
    <div class="container">
        <p class="text-light">
            &copy; 2022 Miguel Moreau
        </p>
    </div>
    </footer>

@code {
    public string Url = "https://localhost:44369/api/notes";
    public ResponseUIDTO response = new ResponseUIDTO();


    protected override async Task OnInitializedAsync() =>
       response = await Http.GetFromJsonAsync<Data.ResponseUIDTO>(Url);


}
